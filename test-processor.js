// Teste r√°pido do processador
require('dotenv').config();
const BackgroundImageProcessor = require('./background-processor');

console.log('üß™ Testando Processador...\n');

console.log('üìã Verificando vari√°veis de ambiente:');
console.log('  GEMINI_API_KEY:', process.env.GEMINI_API_KEY ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
console.log('  SUPABASE_URL:', process.env.NEXT_PUBLIC_SUPABASE_URL ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
console.log('  SUPABASE_KEY:', process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ? '‚úÖ Configurada' : '‚ùå N√£o configurada');

console.log('\nüöÄ Iniciando processador...\n');

const processor = new BackgroundImageProcessor();

processor.init().then(success => {
    if (success) {
        console.log('\n‚úÖ Processador iniciado com sucesso!');
        console.log('üìã Monitorando buffer...');
        console.log('‚è∞ Aguarde 10 segundos para ver se processa...\n');
        
        // Aguardar 15 segundos e depois parar
        setTimeout(() => {
            console.log('\nüõë Teste conclu√≠do. Se viu mensagens de processamento acima, est√° funcionando!');
            processor.stop();
            process.exit(0);
        }, 15000);
    } else {
        console.log('\n‚ùå Falha ao iniciar processador');
        console.log('Verifique as configura√ß√µes acima');
        process.exit(1);
    }
}).catch(error => {
    console.error('\n‚ùå Erro:', error);
    process.exit(1);
});

