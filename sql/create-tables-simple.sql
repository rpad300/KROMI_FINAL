-- =====================================================
-- VISIONKRONO - CRIA√á√ÉO DE TABELAS PARA CATEGORIAS E MODALIDADES
-- =====================================================
-- Execute este SQL no Supabase SQL Editor

-- =====================================================
-- 1. TABELA DE MODALIDADES DE EVENTO
-- =====================================================
CREATE TABLE IF NOT EXISTS event_modalities (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    icon VARCHAR(10) DEFAULT 'üèÉ',
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- =====================================================
-- 2. TABELA DE CATEGORIAS POR IDADE
-- =====================================================
CREATE TABLE IF NOT EXISTS age_categories (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(50) NOT NULL UNIQUE,
    min_age INTEGER NOT NULL,
    max_age INTEGER NOT NULL,
    gender CHAR(1) CHECK (gender IN ('M', 'F', 'X')), -- X = ambos os g√©neros
    icon VARCHAR(10) DEFAULT 'üèÉ',
    is_active BOOLEAN DEFAULT true,
    sort_order INTEGER DEFAULT 0,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- =====================================================
-- 3. TABELA DE CONFIGURA√á√ÉO DE CATEGORIAS POR EVENTO
-- =====================================================
CREATE TABLE IF NOT EXISTS event_category_config (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    event_id UUID NOT NULL REFERENCES events(id) ON DELETE CASCADE,
    age_category_id UUID NOT NULL REFERENCES age_categories(id) ON DELETE CASCADE,
    is_enabled BOOLEAN DEFAULT true,
    custom_name VARCHAR(100), -- Nome personalizado para esta categoria neste evento
    custom_description TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    UNIQUE(event_id, age_category_id)
);

-- =====================================================
-- 4. TABELA DE CONFIGURA√á√ÉO DE MODALIDADES POR EVENTO
-- =====================================================
CREATE TABLE IF NOT EXISTS event_modality_config (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    event_id UUID NOT NULL REFERENCES events(id) ON DELETE CASCADE,
    modality_id UUID NOT NULL REFERENCES event_modalities(id) ON DELETE CASCADE,
    is_enabled BOOLEAN DEFAULT true,
    custom_name VARCHAR(100), -- Nome personalizado para esta modalidade neste evento
    custom_description TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    UNIQUE(event_id, modality_id)
);

-- =====================================================
-- 5. INSERIR MODALIDADES PADR√ÉO
-- =====================================================
INSERT INTO event_modalities (name, description, icon) VALUES
('Corrida', 'Corridas de rua e trail running', 'üèÉ'),
('Ciclismo', 'Eventos de ciclismo de estrada e BTT', 'üö¥'),
('Triatlo', 'Nata√ß√£o, ciclismo e corrida', 'üèä'),
('Caminhada', 'Caminhadas e marchas', 'üö∂'),
('Nata√ß√£o', 'Eventos de nata√ß√£o', 'üèä'),
('Atletismo', 'Eventos de pista e campo', 'üèÉ‚Äç‚ôÇÔ∏è')
ON CONFLICT (name) DO NOTHING;

-- =====================================================
-- 6. INSERIR CATEGORIAS PADR√ÉO
-- =====================================================
INSERT INTO age_categories (name, min_age, max_age, gender, icon, sort_order) VALUES
-- Categorias Masculinas
('M20', 0, 19, 'M', 'üë∂', 1),
('M30', 20, 29, 'M', 'üèÉ', 2),
('M40', 30, 39, 'M', 'üèÉ‚Äç‚ôÇÔ∏è', 3),
('M50', 40, 49, 'M', 'üèÉ‚Äç‚ôÄÔ∏è', 4),
('M60', 50, 59, 'M', 'üö∂', 5),
('M70+', 60, 999, 'M', 'üö∂‚Äç‚ôÇÔ∏è', 6),
-- Categorias Femininas
('F20', 0, 19, 'F', 'üë∂', 7),
('F30', 20, 29, 'F', 'üèÉ', 8),
('F40', 30, 39, 'F', 'üèÉ‚Äç‚ôÇÔ∏è', 9),
('F50', 40, 49, 'F', 'üèÉ‚Äç‚ôÄÔ∏è', 10),
('F60', 50, 59, 'F', 'üö∂', 11),
('F70+', 60, 999, 'F', 'üö∂‚Äç‚ôÇÔ∏è', 12),
-- Categorias Mistas (para eventos sem distin√ß√£o de g√©nero)
('Open', 0, 999, 'X', 'üèÜ', 13)
ON CONFLICT (name) DO NOTHING;

-- =====================================================
-- 7. √çNDICES PARA PERFORMANCE
-- =====================================================
CREATE INDEX IF NOT EXISTS idx_event_category_config_event_id ON event_category_config(event_id);
CREATE INDEX IF NOT EXISTS idx_event_category_config_category_id ON event_category_config(age_category_id);
CREATE INDEX IF NOT EXISTS idx_event_modality_config_event_id ON event_modality_config(event_id);
CREATE INDEX IF NOT EXISTS idx_event_modality_config_modality_id ON event_modality_config(modality_id);
CREATE INDEX IF NOT EXISTS idx_age_categories_gender_age ON age_categories(gender, min_age, max_age);
CREATE INDEX IF NOT EXISTS idx_age_categories_sort_order ON age_categories(sort_order);

-- =====================================================
-- 8. COMENT√ÅRIOS PARA DOCUMENTA√á√ÉO
-- =====================================================
COMMENT ON TABLE event_modalities IS 'Modalidades de eventos configur√°veis (Corrida, Ciclismo, etc.)';
COMMENT ON TABLE age_categories IS 'Categorias por idade e g√©nero configur√°veis';
COMMENT ON TABLE event_category_config IS 'Configura√ß√£o de categorias habilitadas por evento';
COMMENT ON TABLE event_modality_config IS 'Configura√ß√£o de modalidades habilitadas por evento';
